
Keyword operator setter => keyword.operator.setter
M bold => markup.bold
meta.headers.blog string.unquoted.blog => meta.headers.blog string.unquoted.blog
entity.name.tag, meta.record.definition => source.ocaml entity.name.tag, source.ocaml meta.record.definition
√ Normal Variables => variable.other.php, variable.other.normal
✘ XML Tag => meta.tag.xml
 => 
Invalid bad-comma => invalid.bad-comma.css
C/C++ Preprocessor Line => other.preprocessor.c
Markup: Link => markup.underline.link
String escapes => string constant.character.escape
Integer => constant.numeric
Diff Inserted => markup.inserted
ß Blog Post / Email Message => text.blog, text.mail
¢ Function Declaration => meta.function, meta.property.function, declaration.function
L support.function.section => text.latex support.function.section
Invalid - depricated => invalid.deprecated
⎇ diff.changed => markup.changed
Markup: Quote (Email) => markup.quote
L entity.name.section => text.latex entity.name.section -meta.group -keyword.operator.braces
Tag attribute => entity.other.attribute-name
Preprocessor line => meta.preprocessor
Markup.heading => markup.heading | markup.heading entity.name
✘ Tag => meta.tag
support.constant.property-value.css => support.constant.property-value.css
♦ Entity inherited-class => entity.other.inherited-class
Markup: Quote Double (Email) => markup.quote markup.quote
namespace => storage.type.namespace
♦ String.regexp.character-class => string.regexp.character-class
String (executed) => string.interpolated
Invalid deprecated trailing-whitespace => invalid.deprecated.trailing-whitespace
support.function => support.function
M markup => markup markup -(markup meta.paragraph.list)
Markup.italic => markup.italic
Function Declaration => declaration.function, entity.name.function
PHP: PHPdocs => keyword.other.phpdoc.php
() brackets => punctuation.section.function
~ String RegEx => string.regexp
√ Constant Variable => variable.other.constant
Embedded source => text source
Attribute with Value => meta.attribute-with-value
source.js.embedded => source.js.embedded
Function parameter => variable.parameter
meta.brace.curly.function => punctuation.section.function, meta.brace.curly.function, meta.function-call punctuation.section.scope.ruby
Ruby source => source.ruby
Line-number directives => source.ocaml keyword.other.directive.line-number
MultiMarkdown Metadata => meta.header.multimarkdown
c C/C++ Preprocessor Line => meta.preprocessor.c
Variable other => variable.other
Markup underline => markup.underline
Comments => comment
xml tag => entity.name.tag.localname.xml
Markup: Separator => meta.separator
Changed files (Subversion) => meta.scope.changed-files.svn, markup.inserted.svn, markup.changed.svn, markup.deleted.svn
css#id => meta.selector.css entity.other.attribute-name.id
————————————————— => 
§ Attribute-Match => source.css meta.attribute-selector keyword.operator.comparison
Keyword -> Operator => keyword.operator
Markdown link => meta.link
§ meta.scope.property-list => meta.scope.property-list
Meta Tag => meta.tag
Markdown => text.html.markdown
meta.brace.erb => punctuation.section.embedded -(source string source punctuation.section.embedded), meta.brace.erb.html
CSS: Font Names => support.constant.font-name.css
Markup bold => markup.bold
§ css.class => meta.selector.css entity.other.attribute-name.class
PHP: Variables Safer Globals => variable.other.global.safer.php
diff header => meta.diff, meta.diff.header, meta.separator
Entity => entity
 Keyword Operator Comparison => keyword.operator.comparison
~ String RegEx Arbitrary-Repitition => string.regexp.arbitrary-repitition
C preprocessor directive => meta.preprocessor.c keyword
OCaml prefix f-p operator => source.ocaml keyword.operator.symbol.prefix.floating-point
√ instance Variable => variable.other.readwrite.instance
Keyword Control => keyword.control
CSS: Selectors #ID => entity.other.attribute-name.id.css
Function argument name => declaration.function argument-name
diff inserted => markup.inserted
String embedded source => string.quoted source
Embedded Code => embedded
html tag punctuation => entity.name.tag
Keywords => keyword, variable.language
Strings => string
diff.header => meta.diff, meta.diff.header
√ global Variable => variable.other.readwrite.global
storage type => storage.type, support.constant.actionscript.2
Library Constant => support.constant
Markup italic => markup.italic
doctype declaration => entity.name.tag.doctype
OCaml infix operator => source.ocaml keyword.operator.symbol.infix
Markup quote => markup.quote
Log Entry Error => meta.line.error.logfile
 Keyword Operator Assignment => keyword.operator.assignment
~ Number => constant.numeric
º meta.block.content.slate  => meta.block.content.slate 
M underline link => meta.reference.list markup.underline.link, text.html.textile markup.underline.link
Language Constant => constant.language
Function (definition) => entity.name.function, keyword.other.name-of-parameter.objc
♦ String embedded-variable => source string source
doctype punctation => meta.tag.sgml.html
hash brackets => punctuation.section.scope
CSS Selector => meta.selector.css, entity.other.attribute-name.pseudo-class.css, entity.name.tag.wildcard.css, entity.other.attribute-name.id.css, entity.other.attribute-name.class.css
CONSTANT => constant.language.null.actionscript
§ css additional-constants => meta.property-value support.constant.named-color.css, meta.property-value constant
⎇ diff.header => meta.diff, meta.diff.header
HTML: ServerSide Includes => comment.other.server-side-include.xhtml, comment.other.server-side-include.html
String source => string source
Group1 => meta.odd-tab.group1, meta.group.braces, meta.block.slate, text.xml.strict meta.tag, meta.paren-group, meta.section
⎇ diff.deleted => markup.deleted
Group2 => meta.even-tab.group2, meta.group.braces meta.group.braces, meta.block.slate meta.block.slate, text.xml.strict meta.tag meta.tag, meta.group.braces meta.group.braces, meta.paren-group meta.paren-group, meta.section meta.section
Group3 => meta.odd-tab.group3, meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section
Misc Punctuation => meta.brace.erb, source.ruby.embedded.source.brace, punctuation.section.dictionary, punctuation.terminator.dictionary, punctuation.separator.object, punctuation.separator.statement, punctuation.separator.key-value.css
constant.character, constant.other => text source constant.character, text source constant.other
Tag attribute-name => entity.other.attribute-name, meta.attribute.smarty
Group4 => meta.even-tab.group4, meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section
OCaml prefix f-p operators => source.ocaml keyword.operator.symbol.prefix.floating-point
Support.constant => support.constant
Group5 => meta.odd-tab.group5, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section meta.section
Group6 => meta.even-tab.group6, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section meta.section meta.section
Symbol => constant.character, constant.other, punctuation.definition.constant
meta.tag.inline source => meta.tag.inline source
Group7 => meta.odd-tab.group7, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section meta.section meta.section meta.section
~ String Literal => string.quoted.literal, string.quoted.double.ruby.mod
~ Library constant => support.constant, constant.name
M italic => markup.italic
Group8 => meta.even-tab.group8, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section meta.section meta.section meta.section meta.section
Diff Remove => markup.deleted
Class Variable => variable.other, variable.js, punctuation.separator.variable
Class inheritance => entity.other.inherited-class
§ meta.property-name => meta.property-name
Group9 => meta.odd-tab.group9, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group meta.paren-group, meta.section meta.section meta.section meta.section meta.section meta.section meta.section meta.section meta.section
text.subversion-commit => text.subversion-commit
~ String Unquoted => string.unquoted -string.unquoted.embedded, string.quoted.double.multiline, meta.scope.heredoc
PHP Variable => variable.other.php
Text => text
Invalid deprecated => invalid.deprecated
M heading => markup.heading
Comment Block => comment.block
Import Line => keyword.control.import.python, keyword.control.import.from.python
¢ Class name => entity.name.class, entity.name.type.class, entity.name.type.module
LaTeX environment (nested) => text.latex meta.environment meta.environment
Punctuation delimiter method => punctuation.delimiter.method
Comment Punctuation => comment punctuation
entity.name.type.module => source.ocaml entity.name.type.module
PHP: Strings Double-Quoted => string.quoted.double.php
Invalid – Illegal => invalid.illegal
Regular expression => string.regexp
Invalid – Deprecated => invalid.deprecated
Support modules => support.other
property => support.property, source.css
Markup: Heading => markup.heading, markup.heading entity
Ruby Html => text.html.ruby
Include <system> => string.quoted.other.lt-gt.include
String constant => string constant
CSS: Invalid Comma => invalid.bad-comma.css
doctype string => string.quoted.double.doctype
OCaml infix f-p operator => source.ocaml keyword.operator.symbol.infix.floating-point
◊ Text => text -text.xml.strict
Constant => constant, support.constant
Invalid Deprecated => invalid.deprecated
Class type => entity.name.type.class-type
✘ Meta.tag.attribute-name => entity.other.attribute-name
Keyword -> Unit => keyword.other.unit
String embedded-source => string.quoted source
¢ Function Declaration Parameters Punctuation => punctuation.definition.parameters, variable.parameter.function punctuation.separator.object
M quote block => markup.quote
Textile Numbered list => markup.list.numbered.textile
subtleGradient.com => meta.subtlegradient
Number => constant.numeric
Tag => meta.tag, declaration.tag
Markup raw => markup.raw
Non-terminal definition (ocamlyacc) => entity.name.function.non-terminal
Html Tags => meta.tag, declaration.tag, meta.doctype
¢ Inherited class => entity.other.inherited-class, entity.name.module
CSS: Property Value => support.constant.property-value.css
Entity other attribute-name => entity.other.attribute-name
C preprocessor => meta.preprocessor.c
OCaml infix f-p operators => source.ocaml keyword.operator.symbol.infix.floating-point
♦ Support.function => support.function
source.css => source.css
css.class => meta.selector.css entity.other.attribute-name.class
meta.property.value.css => meta.property-value.css
j Cast => meta.cast
css property punctuation => punctuation.separator.key-value.css
~ String RegEx Character-Class => string.regexp.character-class
Haml ID => entity.name.tag.id.haml
Markup list => markup.list
¢ Storage Modifier => storage.modifier
Keyword other => keyword.other
L markup => meta.function markup
comment => comment -comment.line
meta.tag => meta.tag, meta.tag entity
text.html.markdown markup.heading => text.html.markdown markup.heading
Markup.list => markup.list
Keyword.operator => keyword.operator, declaration.function.operator, meta.preprocessor.c.include
L constant.language.general => text.latex constant.language.general
Invalid Trailing Whitespace => invalid.deprecated.trailing-whitespace
Source => source
Function Call Arguments Punctuation => punctuation.section.function, meta.brace.curly.function, meta.function-call punctuation.section.scope.ruby, meta.function-call punctuation.separator.object
Keyword.Operator => keyword.operator
✘ Tag Block Head => meta.section.html.head
Ruby Class Name => support.class.ruby
Normal Variable => variable.other.php, variable.other.normal
√ pre-defined variable => variable.other.readwrite.global.pre-defined, variable.language
Array => meta.group.braces.square punctuation.section.scope, meta.group.braces.square meta.delimiter.object.comma, meta.brace.square, punctuation.separator.array, punctuation.section.array
Objective-C Method Call => support.function.any-method
Markup: List => markup.list
Inline Ruby Html => source.ruby.rails.embedded.html
L meta.end-document => text.latex meta.end-document, text.latex meta.begin-document, meta.end-document.latex support.function, meta.end-document.latex variable.parameter, meta.begin-document.latex support.function, meta.begin-document.latex variable.parameter
Markup.quote => markup.quote
meta.brace.pipe => meta.brace.pipe
OCaml floating-point constants => source.ocaml constant.numeric.floating-point
L variable.parameter.cite => variable.parameter.cite
√ class Variable => variable.other.readwrite.class
source.ruby.rails.embedded.return-value.one-line => source.ruby.rails.embedded.return-value.one-line
Support function properties => support.function.properties
✘ Tag Inline => meta.tag.inline
diff deleted => markup.deleted
Entity inherited-class => entity.other.inherited-class
Constant character entity => constant.character.entity
Javascript Events => support.function.event-handler.js
diff changed => markup.changed
JS: Operator => keyword.operator.js
Int32 constant => constant.numeric.integer.int32
CSS: Property Colours => constant.other.rgb-value.css
HTML: DocInfo DTD => string.quoted.docinfo.doctype.DTD
L keyword.control.ref => text.latex keyword.control.ref
Library class/type => support.type, support.class
Class (definition) => entity.name
✘ Meta.tag.«all» => meta.tag, meta.tag entity
diff header from => meta.diff.header.from-file
Objective-C Method Call - : => support.function.any-method - punctuation
Constants => constant
✘ Namespaces => entity.name.tag.namespace, entity.other.attribute-name.namespace
pseudo class => entity.other.attribute-name.pseudo-class
§ CSS => source.css
css attribute id => entity.other.attribute-name.id
Trailing whitespace => invalid.deprecated.trailing-whitespace
✘ Tag Other => meta.tag.other, entity.name.tag.style, entity.name.tag.script, meta.tag.block.script, source.js.embedded punctuation.definition.tag.html, source.css.embedded punctuation.definition.tag.html
◊ Text String Source => text string source
Special Function => keyword.other.special-method, meta.function-call entity.name.function -(meta.function-call meta.function), support.function - variable
support.class.collection => support.class.collection
Embedded Ruby => text.html.ruby source
PHP: Constants Standard Predefined => support.constant.std.php
L variable.parameter.label.reference => text.latex variable.parameter.label.reference
Markup deleted => markup.deleted
css constructor => meta.constructor.argument.css
◊ Text Source => text source, meta.scope.django.template
Link => markup.underline.link
PHP: Strings Single-Quoted => string.quoted.single.php
diff unchanged line => source.diff
css keyword => keyword.other.unit
IE6 => meta.property.vendor.microsoft.trident.4, 
meta.property.vendor.microsoft.trident.4 support.type.property-name,
meta.property.vendor.microsoft.trident.4 punctuation.terminator.rule
meta.source.embedded => meta.source.embedded
HTML: DocInfo XML => meta.tag.preprocessor.xml
PHP: Include() & Require() => keyword.other.include.php
L variable.parameter.label => text.latex variable.parameter.label
IE7 => meta.property.vendor.microsoft.trident.5, 
meta.property.vendor.microsoft.trident.5 support.type.property-name,
meta.property.vendor.microsoft.trident.5 punctuation.separator.key-value,
meta.property.vendor.microsoft.trident.5 punctuation.terminator.rule
Control Structures => keyword.control
Constant (other variable) => variable.other.constant
Markup: Quote => markup.quote
§ meta.property-value => meta.property-value
Polymorphic variants => storage.type.variant.polymorphic, entity.name.type.variant.polymorphic
ASDoc @see references => meta.documentation.tag.see.asdoc
Constant language => constant.language
Class name => entity.name.class, support.class.js
Tag name => entity.name.tag
Object Punctuation => punctuation.separator.objects, 
meta.group.braces.curly meta.delimiter.object.comma, 
punctuation.separator.key-value -meta.tag, 
source.ocaml punctuation.separator.match-definition

 Function Call Without Arguments => meta.function-call.method.without-arguments, meta.function-call.method.without-arguments entity.name.function
L meta.label.reference => text.latex meta.label.reference
String Regexp => string.regexp
css property value => meta.property-value, constant.other.color
Invalid - illegal => invalid.illegal
Attribute name => keyword.markup.attribute-name
—————————————————— => meta.subtlegradient
Identifier => constant.language
text.html.markdown string => text.html.markdown string
string.interpolated => string.interpolated
Entity name class => entity.name.class
Invalid trailing whitespace => invalid.deprecated.trailing-whitespace
Token reference (ocamlyacc) => entity.name.type.token.reference
XML Declaration => meta.tag.preprocessor.xml
ActiveRecord Function => support.function.activerecord.rails
Superclass => entity.other.inherited-class
✘ Tag Structure => meta.tag.structure, meta.tag.segment
css property-value => meta.property-group support.constant.property-value.css, meta.property-value support.constant.property-value.css
symbol => constant.other.symbol
----------------------------------- => 
Comment => comment
♦ Embedded Source (Bright) => text source
OCaml operator => source.ocaml keyword.operator.symbol
Punctuation definition entity => punctuation.definition.entity
✘ Doctype/XML Processing => meta.sgml.html meta.doctype, meta.sgml.html meta.doctype entity, meta.sgml.html meta.doctype string, meta.xml-processing, meta.xml-processing entity, meta.xml-processing string
Tag container => meta.tag
Doctype/XML Processing => declaration.sgml.html declaration.doctype, declaration.sgml.html declaration.doctype entity, declaration.sgml.html declaration.doctype string, declaration.xml-processing, declaration.xml-processing entity, declaration.xml-processing string
Library Variable => support.variable
♦ Support.constant => support.constant
Latex support => text.latex support.function
c C/C++ Preprocessor Directive => meta.preprocessor.c keyword
Tag Bracket => declaration.tag, meta.tag
text meta.paragraph => text meta.paragraph
xml cdata content => string.unquoted.cdata.xml
Character constant => constant.character
Meta Brace => punctuation.section.embedded -(source string source punctuation.section.embedded), meta.brace.erb.html
Keyword control => keyword.control
Tag Attribute => entity.other.attribute-name
diff.inserted => markup.inserted
Interpolation => string.interpolation
~ String Punctuation => punctuation.definition.string -meta.tag
~ String RegEx Group 1 => string.regexp.group
º meta.source.embedded => meta.source.embedded, entity.other.django.tagbraces
~ String RegEx Group 2 => string.regexp.group string.regexp.group 
~ Built-in constant => constant.language, keyword.other.unit, constant.other.java, constant.other.unit
Inherited class name => entity.other.inherited-class
Markup: Underline => markup.underline
———————— END ———————— => 
Punctuation => punctuation - (punctuation.definition.string || punctuation.definition.comment)
~ String RegEx Group 3 => string.regexp.group string.regexp.group string.regexp.group 
mark head => markup.heading
⎇ diff.inserted => markup.inserted
Class type name => entity.name.type.class.type
punctuation block => punctuation.separator.variable
~ String RegEx Group 4 => string.regexp.group string.regexp.group string.regexp.group string.regexp.group 
css property-value; => meta.property-group support.constant.property-value.css, meta.property-value support.constant.property-value.css
CSS: Selectors .ClassName => entity.other.attribute-name.class.css
Function argument type => declaration.function function-arg-type
Pre-processor Line => keyword.preprocessor
Tag String => string.quoted.double.html
Functions => support.function
number => constant.numeric
Haml Prolog Metadata => punctuation.definition.prolog.haml
Meta.tag.A => declaration.tag, declaration.tag entity, meta.tag, meta.tag entity
Meta.separator => meta.separator
♦ String.regexp.group => string.regexp.group
Frame title => entity.name.function.frame
Block Quote => markup.quote
¢ Instance => entity.name.instance, entity.name.type.instance
~ String RegEx Comment => string.regexp comment
ruby string interpolation => source.ruby.embedded.source punctuation.section.embedded.ruby
Preprocessor Directive => keyword.control.import
diff deleted line => markup.deleted.diff
------------------------------------------------------------------------------------------ => 
String Punctuation => punctuation.definition.string
◊ Text Source String Source => 
String escapes (executed) => string.interpolated constant.character.escape
Markdown Link Def => meta.link.reference.def.markdown
j Entity Name Type => entity.name.type
Diff Add => markup.inserted
Function Name => entity.name.function
Constant character => constant.character
MultiMarkdown meta key => meta.header.key.multimarkdown
CSS: Selectors <Elements> => entity.name.tag.css
~ Character constant => constant.character
Punctuation (Tags) => punctuation.definition.tag
L keyword.operator.brackets => text.latex keyword.operator.brackets
Inline tag => declaration.tag.inline, declaration.tag.inline entity, source entity.name.tag, source entity.other.attribute-name, meta.tag.inline, meta.tag.inline entity
Module definitions => entity.name.type.module
§ css constructor.argument => meta.constructor.argument.css
M reference => meta.reference, markup.underline.link
meta.function-call.py => meta.function-call.py
Function Argument => variable.parameter
MultiMarkdown meta value => meta.header.value.multimarkdown
Markup: List Item => markup.list
§ Attribute => source.css entity.other.attribute-name.attribute
Keyword Operator => keyword.operator, declaration.function.operator, meta.preprocessor.c.include, punctuation.separator.operator
Operator => keyword.operator
String variable => string variable
Variable => variable
Array Punctuation => meta.group.braces.square punctuation.section.scope, meta.group.braces.square meta.delimiter.object.comma, meta.brace.square, punctuation.separator.array, punctuation.section.array, punctuation.definition.array, punctuation.definition.constant.range
Local variable => variable.other.local
Raw Markup => markup.raw
Other Keywords => keyword.other
Array, Range => meta.structure.array -punctuation.definition.array, meta.definition.range -punctuation.definition.constant.range
keyword operator => keyword.operator
Markup name of tag => entity.name.tag
Inherited class => entity.other.inherited-class
Character constants => constant.character
M strike => 
text.html.markdown markup.list meta.paragraph => text.html.markdown markup.list meta.paragraph
M list => markup.list meta.paragraph
text.subversion-commit meta.scope.changed-files => text.subversion-commit meta.scope.changed-files, text.subversion-commit meta.scope.changed-files.svn meta.diff.separator
Regular Expressions => string.regexp
css id => meta.selector.css entity.other.attribute-name.id
Punctuation.separator => punctuation.separator
Diff Changed => markup.changed
Constant: User-defined => constant.character, constant.other
Textile Bold => markup.bold.textile
Plain XML text => text.xml
√ Variable Punctuation => punctuation.definition, punctuation.separator.variable
meta.brace.curly meta.group => meta.brace.curly meta.group.css
String.regexp => string.regexp
Markdown Code Block => markup.raw.block.markdown
css class => meta.selector.css entity.other.attribute-name.class
Ruby Number => constant.numeric.ruby
º meta.group.braces 1 => meta.odd-tab.group1, meta.group.braces, meta.block.slate, text.xml.strict meta.tag, meta.tell-block meta.tell-block
√ Variable => variable.other, variable.js, punctuation.separator.variable
diff line range => meta.diff.range
accessor => storage.type.accessor
√ Library variable => support.variable
º meta.group.braces 2 => meta.even-tab.group2, meta.group.braces meta.group.braces, meta.block.slate meta.block.slate, text.xml.strict meta.tag meta.tag, meta.group.braces meta.group.braces, meta.tell-block meta.tell-block
º meta.group.braces 3 => meta.odd-tab.group3, meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block
Character Constants => constant.character
CSS Constant => support.constant.font-name.css, constant.other.color.rgb-value.css
º meta.group.braces 4 => meta.even-tab.group4, meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block
Type => storage, support.type
º meta.group.braces.round JS => source.js meta.group.braces.round, meta.scope.heredoc
Markup: Raw => markup.raw
Keyword.control => keyword.control
Preprocessor directive => keyword.control.import
Function result => declaration.function function-result
L meta.group.braces => text.latex meta.group.braces
º meta.group.braces 5 => meta.odd-tab.group5, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block
¢ Library class/type => support.type, support.class
§ css property-name: => support.type.property-name.css
Arguments => variable.parameter
Control keyword => keyword.control
º meta.group.braces 6 => meta.even-tab.group6, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block
Invalid => invalid
º meta.group.braces 7 => meta.odd-tab.group7, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block
HTML Entity => constant.character.entity
CSS Other => keyword.other.unit.css, constant.other.rgb-value.css, constant.numeric.css
Library Function => support.function
Entity name type class => entity.name.type.class
º meta.group.braces 8 => meta.even-tab.group8, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block
Function argument => variable.parameter
  function.section => meta.function.section
Variant Types => entity.name.class.variant
diff inserted line => markup.inserted.diff
Constant: Built-in => constant.language
º meta.group.braces 9 => meta.odd-tab.group11, meta.odd-tab.group10, meta.odd-tab.group9, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces , meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate meta.block.slate , text.xml.strict meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag meta.tag, meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces meta.group.braces, meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block meta.tell-block
hash separator => punctuation.separator.key-value
PHP Safe global => variable.other.global.safer.php
L keyword.control.cite => text.latex keyword.control.cite
~ User-defined constant => constant.other, constant.block
Section => meta.section entity.name.section, declaration.section entity.name.section
OCAML => 
Storage type method => storage.type.method
Embedded Source => text source
Thomas Aylott ㊷ => meta.thomas_aylott
entity.name.section => entity.name.section
~ Built-in constant+ => constant.language.pseudo-variable
Curly Punctuation => punctuation.section.scope.curly, punctuation.section.scope
OCaml f-p infix operator => source.ocaml keyword.operator.symbol.infix.floating-point
◊ Source String Source => source string source
~ String RegEx Definition Keyword => string.regexp punctuation.definition.string keyword.other
Section name => entity.name.section
String Embedded Source => source string source punctuation.section.embedded
Characters => constant.character
Markup.raw => markup.raw
punctuation.separator.parameters => punctuation.separator.parameters
Constant character escape => constant.character.escape
import => storage.type.import
◊ Text Source Text String => 
Storage.modifier => storage.modifier
List => markup.list
support.class => support.class
LaTeX environment => text.latex meta.environment
LaTeX => text.latex
M del => 
meta.round-brackets1 => meta.round-brackets, meta.property-list, comment.block.conditional
number, string => constant.numeric, string.quoted
Html Meta => meta.tag.inline.any.html,  meta.tag.block.any.html
♦ String constant => string constant
meta.round-brackets2 =>  meta.round-brackets meta.round-brackets, comment.block.conditional comment.block.conditional
Markup: Comment => markup comment
D Diff Add => markup.inserted
meta.round-brackets3 =>  meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional
css attribute class => entity.other.attribute-name.class
css additional-constants => meta.property-value support.constant.named-color.css, meta.property-value constant
Library Class/Type => support.type, support.class
Floating-point infix operator => keyword.operator.infix.floating-point.ocaml
css pseudo => meta.selector.css entity.other.attribute-name.pseudo-class.css,meta.selector.css entity.other.attribute-name.pseudo-element.css
meta.round-brackets4 =>  meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional
Floating-point infix operators => source.ocaml keyword.operator.symbol.infix.floating-point
D Diff Delete => markup.deleted
css constant property value => support.constant.property-value
L meta.environment.list 2 => text.latex meta.environment.list meta.environment.list 
meta.round-brackets5 =>  meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional
§ css property-value; => meta.property-group support.constant.property-value.css, meta.property-value support.constant.property-value.css
L meta.environment.list 3 => text.latex meta.environment.list meta.environment.list meta.environment.list 
Diff Deleted => markup.deleted
Control => keyword.control
meta.round-brackets6 =>  meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets meta.round-brackets,  comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional comment.block.conditional
L meta.environment.list 4 => text.latex meta.environment.list meta.environment.list meta.environment.list meta.environment.list 
L meta.environment.list 5 => text.latex meta.environment.list meta.environment.list meta.environment.list meta.environment.list meta.environment.list 
Markdown Table => markup.table.multimarkdown
¢ Function name => entity.name.function, entity.name.preprocessor
Lang Variable => variable.language
diff header to => meta.diff.header.to-file
L meta.environment.list 6 => text.latex meta.environment.list meta.environment.list meta.environment.list meta.environment.list meta.environment.list meta.environment.list 
Language Constants => constant.language
Declaration tag => declaration.tag
 Keyword Operator Arithmetic => keyword.operator.arithmetic
✘ Tag attribute => entity.other.attribute-name, meta.tag punctuation.definition.string
Bold Markup => markup.bold
¢ Function Declaration Parameters => variable.parameter -variable.parameter.misc.css, meta.definition.method  meta.definition.param-list, meta.function.method.with-arguments variable.parameter.function
◊ Text String Source String Source => text string source string source
Variant types => entity.name.class.variant
Command/method => support.function
array brackets => punctuation.section.array
Keyword other unit => keyword.other.unit
✘ Meta.tag.inline => source entity.name.tag, source entity.other.attribute-name, meta.tag.inline, meta.tag.inline entity
Library object => support.class, support.type
Floating-point prefix operator => keyword.operator.prefix.floating-point.ocaml
JS Support Class => support.class.js
Exceptions => keyword.exception
Tag Name => entity.name.tag
Javascript Keywords => keyword.control.js
css property-name: => support.type.property-name.css
L meta.environment.list => text.latex meta.environment.list
◊ Source Embeded Source => source source, source.java.embedded
Textile List => markup.list.unnumbered.textile
Library function => support.function
~ String => string -meta.tag -meta.doctype -string.regexp -string.literal -string.interpolated -string.quoted.literal -string.unquoted, variable.parameter.misc.css, text string source string, string.unquoted string, string.regexp string, string.interpolated string, meta.tag source string
§ css tag-name => meta.selector.css entity.name.tag
Group10 => meta.even-tab.group10
C/C++ Preprocessor Directive => other.preprocessor.c entity
text.plain => text.plain
Group11 => meta.odd-tab.group11
~ variable.language.this.js.prototype => variable.language.this.js
M underline => markup.underline
PList unquoted string => source.plist string.unquoted, source.plist keyword.operator
meta.class.instance.constructor keyword.operator.new => meta.class.instance.constructor keyword.operator.new
ASDoc @param references => meta.documentation.tag.param.asdoc
meta.leading-space => meta.leading-space
Variants => entity.name.type.variant
Bold String Quotes => string.quoted.single.brace, string.quoted.double.brace
ß Post Header Keys => meta.header.blog keyword.other, meta.header.mail keyword.other
Library funct/const/var => support.function, support.constant, support.variable, support.other
Library type => support.type
Markup DTD => meta.doctype.DTD, declaration.doctype.DTD
Regexp Escapes => string.regexp constant
Library Function Call => meta.function-call support.function - variable
M HR => markup.hr
Block comment => source comment.block
Embedded Source (Bright) => text.html.ruby source
Type Name => entity.name.type
storage => storage.modifier, meta.tag.inline.any.html, meta.tag.structure.any.html, meta.tag.block.any.html
Special ruby method => keyword.other.special-method.ruby
~ String Interpolated => string.interpolated
Prototype Methods => object.property.function.prototype.js
CSS: Property Keyword => support.type.property-name.css
✘ Tag Block Form => meta.section.html.form
css font => support.constant.font-name
Support.function => support.function
~ Meta Assertion => meta.assertion, meta.group.assertion keyword.control.group.regexp, meta.group.assertion punctuation.definition.group
———————— PUNCTUATION ———————— => 
º Even => source.ruby meta.even-tab, source.ruby meta.even-tab.group2, source.ruby meta.even-tab.group4, source.ruby meta.even-tab.group6, source.ruby meta.even-tab.group8, source.ruby meta.even-tab.group10, source.ruby meta.even-tab.group12

ß Post Header Values => meta.header.blog string.unquoted.blog, meta.header.mail string.unquoted
 Regex Keyword => source.regexp keyword.operator
source.ruby.rails.embedded.one-line => source.ruby.rails.embedded.one-line
Line comment => comment.line
Markup: Bold => markup.bold
§ Tag => meta.selector entity.name.tag
Markup tag attribute => entity.other.attribute-name
✘ Tag Form => meta.tag.form, meta.tag.block.form
§ ID => meta.selector entity.other.attribute-name.id
Markdown Heading => markup.heading.markdown
¢ Entity Name Preprocessor => other.preprocessor, entity.name.preprocessor
Italic Markup => markup.italic
Entity Name => entity.name
✘ Tag Meta => meta.tag.meta
Possible Citation => citation.possible
Markup: Italic => markup.italic
source.ruby.embedded.source => source string source
Storage => storage
Return value => meta.method-return.actionscript.3
String.regexp.«special» => string.regexp.character-class, string.regexp constant.character.escaped, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition
Embedded PHP => source.php
Floating-point prefix operators => source.ocaml keyword.operator.symbol.prefix.floating-point
function => support.function
§ Pseudo-Class => entity.other.attribute-name.pseudo-class, entity.other.attribute-name.tag.pseudo-class
Keyword -> CSS => constant.other.color.rgb-value.css, support.constant.property-value.css
✘ HTML Comment => text comment.block -source
String => string
Underline => markup.underline
mark list => markup.list
Function => support.function
¢ Class Method => meta.definition.method
Function name => entity.name.function
text.html.markdown meta.paragraph => text.html.markdown meta.paragraph
Date/time literal => constant.other.date, constant.other.time
L meta.footnote => meta.footnote
ß Post Content => text.blog text, text.mail text
~ String Punctuation II => string.regexp punctuation.definition.string, string.quoted.literal punctuation.definition.string, string.quoted.double.ruby.mod punctuation.definition.string
Property Value Parens => source.css meta.scope.property-list meta.property-value punctuation.definition.arguments,
source.css meta.scope.property-list meta.property-value punctuation.separator.arguments
Embedded code => string.unquoted.embedded, text source, string.unquoted
Class => entity.name.type
css ending => punctuation.terminator.rule.css
 Library Function Name => support.function
♦ String punctuation => source string source punctuation.section.embedded
Misc => constant.character, punctuation.definition.comment, punctuation.delimiter.object
xml cdata wrapper => punctuation.definition.string.begin.xml, punctuation.definition.string.end.xml
Built-in constant => constant.language
Markdown Code Span => markup.raw.inline.markdown
Italic => markup.italic
meta.source.embedded.return-value => meta.source.embedded.return-value
L Markup Raw => text.latex markup.raw
String interpolated => string.interpolated, string.interpolation
PHP: Keywords Storage => keyword.storage.php
M markdown => 
L keyword.operator.delimiter => text.latex keyword.operator.delimiter
Embedded Ruby Source => text source.ruby
class name => variable.other
Function Call => keyword.other.special-method, meta.function-call entity.name.function -(meta.function-call meta.function), support.function - variable
§ support.type.property-name => support.type.property-name
Prototype Objects => support.class.prototype.js
erb tags => punctuation.section.embedded.ruby
Keyword control import => keyword.control.import
TMLangDef: Keys => support.constant.tm-language-def, support.constant.name.tm-language-def
M raw block => markup.raw.block
§ Selector => meta.selector
Function Group1 => meta.function meta.group.braces.curly.function -(meta.group meta.group), meta.function meta.odd-tab.group1
meta.headers.blog => meta.headers.blog
CSS: Units => keyword.other.unit.css
Invalid illegal => invalid.illegal
source => source
control statement => keyword.control
PHP: Variables Globals => variable.other.global.php
Markup.bold => markup.bold
§ css#id => meta.selector.css entity.other.attribute-name.id
Include "user" => string.quoted.double.include
Constant (built-in) => constant.language
◊ meta.brace.erb => meta.brace.erb
Class inheritence => entity.other.inherited-class
Library constant => support.constant
Pre-processor Directive => keyword.preprocessor directive
Nativeint constant => constant.numeric.integer.nativeint
css property => support.type.property-name.css
HTML: Tag => text.html declaration.tag, text.html meta.tag, text.html entity.name.tag.xhtml
Named constant => support.constant
Entity name type class type => entity.name.type.class.type
Meta tag => declaration.tag, meta.tag,declaration.tag.entity, meta.tag.entity
Comments Block => comment.block
OCaml variant => keyword.type.variant
Inherited Class => entity.other.inherited-class
Heading Markup => markup.heading
http://poignantguide.net/ruby/ => meta.link, markup.underline
Floating-point numbers => constant.numeric.floating-point
L support.function => text.latex support.function -support.function.textit -support.function.emph
Source base => source
Support => support
Constant numeric => constant.numeric
Exception => support.class.exception
inherited-class => entity.other.inherited-class
Markup XML declaration => meta.xml-processing, declaration.xml-processing
Invalid Illegal => invalid.illegal
Support.variable => support.variable
Entity name function => entity.name.function
CSS Property => support.type.property-name.css
♦ String variable => string variable
¢ Class => meta.class -meta.class.instance, declaration.class, meta.definition.class, declaration.module
type => support.type.function.global, support.class
comment.line => comment.line
Preprocessor Line => meta.preprocessor
D Diff Changed => markup.changed
meta.headers.blog keyword.other.blog => meta.headers.blog keyword.other.blog
meta.property.function => meta.property.function, meta.function
Entity name tag => entity.name.tag
meta.source.embedded source => meta.source.embedded source
HTML Attribute => entity.other.attribute-name.html
diff.deleted => markup.deleted
✘ Tag Doctype => meta.doctype, meta.tag.sgml-declaration.doctype, meta.tag.sgml.doctype
Markup DOCTYPE => meta.doctype, declaration.doctype
◊ Source String Interpolated Source => source string.interpolated source
Text base => text
Latex Entity => text.tex.latex entity
diff.changed => markup.changed
Floating-point constant => constant.numeric.floating-point.ocaml
Braces => meta.group.braces.round punctuation.section.scope, meta.group.braces.round meta.delimiter.object.comma, meta.brace.round
Comment block => comment.block
Entity name class variant => entity.name.class.variant
Keyword decorator => keyword.other.decorator
Inherited class seperator => punctuation.separator.inheritance
Markup.underline => markup.underline
Syntax => meta.syntax
keyword like new => keyword.other.special-method
HTML: DocType => meta.tag.sgml.doctype
L keyword.operator.braces => text.latex keyword.operator.braces
Support class => support.class.ruby
♦ String.regexp => string.regexp
Language Keyword => keyword
MultiMarkdown Math => markup.math.multimarkdown
User-defined constant => constant
Markdown Quote => markup.quote.markdown
css constants => meta.property-value support.constant.named-color.css, meta.property-value constant
Type name => entity.name.type
Support function => support.function
Javascript Operators => keyword.operator.js
Token definition (ocamlyacc) => entity.name.type.token
Storage type => storage.type
Why’s (Poignant) Guide to Ruby => markup.bold
OCaml prefix operator => source.ocaml keyword.operator.symbol.prefix
constant => constant.language, source.js
Directives => keyword.other.directive
§ css @at-rule => meta.preprocessor.at-rule keyword.control.at-rule
Storage modifier => storage.modifier
xml text => text.xml
M reference name => entity.name.reference
Markup.deleted => markup.deleted
css constructor.argument => meta.constructor.argument.css
Storage Modifier => storage.modifier
Boolean constant => constant.language.boolean
Camlp4 temp (parser) => source.camlp4.embedded.parser.ocaml
Variables => variable
source.regexp keyword => source.regexp keyword.operator
css @at-rule => meta.preprocessor.at-rule keyword.control.at-rule
support.other.module => source.ocaml support.other.module
MultiMarkdown Footnote Def => meta.footnote.reference.def.multimarkdown
Other Variable => variable.other
Symbols => constant.other
¢ Instance.constructor => meta.class.instance.constructor
Markup tag => meta.tag, declaration.tag, entity.name.tag
§ css:pseudo-class => meta.selector.css entity.other.attribute-name.tag.pseudo-class
String Source String => String Source String, meta.tag string source string
html attribute => entity.other.attribute-name
♦ String.regexp.«special» => string.regexp constant.character.escape, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition
¢ Function => meta.function -(meta.tell-block), meta.property.function, declaration.function
Library variable => support.other.variable
Entity Other => entity.other
M add => 
String.regexp constant.character.escape => string.regexp constant.character.escape
String interpolation => string constant.other.placeholder
keyword => text source keyword
Punctuation/Widgets => punctuation.section.embedded
Storage Types => storage.type
text => text
Ruby Function Name => source.ruby entity.name
♦ Embedded Source => text source
Module type definitions => entity.name.type.module-type.ocaml
Numbers => constant.numeric
Diff Header => meta.diff.header, meta.separator.diff, meta.diff.index, meta.diff.range
Interpolated entity => string.interpolated variable
html tags => meta.tag, declaration.tag
Markup heading => markup.heading
meta.delimiter.object.js => meta.delimiter.object.js
✘ Meta.tag.all => meta.tag, meta.tag entity
✘ Tag name => entity.name.tag
~ Meta Group Assertion Regexp  => meta.group.assertion.regexp 
css @ => meta.preprocessor.at-rule keyword.control.at-rule
Compiler directives => keyword.other.directive
✘ Tag Block => meta.tag.block, meta.tag.xml, meta.tag.key
PHP: Constants Core Predefined => support.constant.core.php
- Meta => 
css brackets => punctuation.section.property-list.css
§ Pseudo-Element => entity.other.attribute-name.pseudo-element
HTML: attribute="" => keyword.markup.attribute-name
Blocks, Expressions 1 => meta.section
Module Keyword => entity.name.module,  support.other.module
Log Entry => meta.line.entry.logfile, meta.line.exit.logfile
Preprocessor => other.preprocessor
Class exception => support.class.exception
Blocks, Expressions 2 => meta.section meta.section
special seperator => keyword.other.go.sql
Keyword => keyword
MultiMarkdown Citation Def => meta.citation.reference.def.multimarkdown
Blocks, Expressions 3 => meta.section meta.section meta.section
String Source => meta.tag string &(text source), declaration.tag string &(text source), source string source
Function argument variable => declaration.function function-argument
 keyword.operator.comparison => keyword.operator.comparison
css property-name => support.type.property-name.css
 Function Punctuation => meta.group.braces.round punctuation.section.scope, 
meta.group.braces.round meta.delimiter.object.comma, 
meta.group.braces.curly.function meta.delimiter.object.comma, 
meta.brace.round
Function argument and result types => storage.type.method
-------------------------------- => 
meta.brace.erb.return-value => meta.brace.erb.return-value
Storage type user-defined => storage.type.user-defined
Invalid Value => invalid.SOMETHING
css tag-name => meta.selector.css entity.name.tag
º meta.block.slate  => meta.block.slate
Keyword operator => keyword.operator.assignment
◊ Source => source
✘ HTML => 
Int64 constant => constant.numeric.integer.int64
meta.delimiter.statement.js => punctuation.terminator.statement, meta.delimiter.statement.js
♦ String embedded-source => string.quoted source
Tag attribute value => meta.attribute-with-value.id.html, string.quoted.double.html
Entity other inherited-class => entity.other.inherited-class
Operators => keyword.operator
meta.source.embedded.bound => meta.source.embedded.bound
Regexp => string.regexp
Regex => string.regexp
Keyword other special-method => keyword.other.special-method
Bold => markup.bold
Storage types => storage.type
CSS: Selectors :PseudoClass => entity.other.attribute-name.pseudo-class.css
OCaml f-p prefix operator => source.ocaml keyword.operator.symbol.prefix.floating-point
Table/field => variable.other.table-field
Markup link => markup.link, link, meta.link.inline
Non-terminal reference (ocamlyacc) => entity.name.function.non-terminal.reference
OCaml f-p constant => source.ocaml constant.numeric.floating-point
¢ Storage => storage -storage.modifier
§ Class => meta.selector entity.other.attribute-name.class
✘ Tag value => meta.tag string -source -punctuation, text source text meta.tag string -punctuation
¢ Function Declaration Name => entity.name.function, entity.name.preprocessor
Haml Class => entity.name.tag.class.haml
Markup.link => markup.link
entity.name.type.variant => entity.name.type.variant
Regexp special => string.regexp constant.character.escape, string.regexp source.ruby.embedded, string.regexp string.regexp.arbitrary-repitition
Function Punctuation => punctuation.separator.parameters.function.js,punctuation.definition.function, punctuation.separator.function-return, punctuation.separator.function-definition, punctuation.definition.arguments, punctuation.separator.arguments
Embedded embedded source => text source string.unquoted, text source text source
meta.delimiter => punctuation.terminator, meta.delimiter, punctuation.separator.method
html attribute punctation => entity.other.attribute-name
String (literal) => string.literal
 Keyword Operator Logical => keyword.operator.logical
Camlp4 code => source.camlp4.embedded
§ Tag Wildcard => entity.name.tag.wildcard, entity.other.attribute-name.universal
Directive => keyword.other.directive
807
